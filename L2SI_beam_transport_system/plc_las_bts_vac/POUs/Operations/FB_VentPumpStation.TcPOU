<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.0">
  <POU Name="FB_VentPumpStation" Id="{c9ceb88b-4172-4db0-aa81-a45d82eabc15}" SpecialFunc="None">
    <Declaration><![CDATA[(* Operation for venting the pumping station *)
FUNCTION_BLOCK FB_VentPumpStation EXTENDS FB_Operation
VAR_INPUT
END_VAR
VAR_OUTPUT
END_VAR
VAR CONSTANT
	(* Expected system states before operation starts*)
	stExpPumpStatus : ST_SBPumpStatuses := (
		bRoughingPumpOn:= TRUE, 
		bTurboPumpOn:= FALSE,
		bIonPumpOn := FALSE);
	
	stExpValveStatus : ST_SBValveStatuses := (
		bGateValveOpen:= FALSE, 
		bVentValveOpen:= FALSE, 
		bORingPumpValveOpen:= TRUE, 
		bForelineValveOpen:= TRUE,
		bSlowPumpValveOpen:= FALSE,
		bSBVentOpen:= FALSE,
		bSBSlowVentOpen:= FALSE);
	
	stExpGaugeReadings : ST_SBGaugeReadings := (
		fPumpStationColdCathodeVal := 1E-5
	);
	stGaugeReadingsOp : ST_SBGaugeReadingsOp := (
		eDPPiraniOp:= E_GaugeCompOp.ATM, 
		eDPColdCathodeOp:= E_GaugeCompOp.IGNORE, 
		ePumpStationPirani1Op:= E_GaugeCompOp.IGNORE, 
		ePumpStationPirani2Op:= E_GaugeCompOp.IGNORE, 
		ePumpStationColdCathodeOp:= E_GaugeCompOp._LTE);
		
	stExpBO4Status : ST_TransportTubeStatuses := (bGateValveOpen:= FALSE);
	stBO4Op : ST_TransportTubeOps := (
		bIonPumpIgnore:= TRUE, 
		bGateValveIgnore:= FALSE, 
		ePiraniOp:= E_GaugeCompOp.IGNORE, 
		eColdCathodeOp:= E_GaugeCompOp.IGNORE);
		
	stExpBI1Status : ST_TransportTubeStatuses := (bGateValveOpen:= FALSE);
	stBI1Op : ST_TransportTubeOps := (
		bIonPumpIgnore:= TRUE, 
		bGateValveIgnore:= FALSE, 
		ePiraniOp:= E_GaugeCompOp.IGNORE, 
		eColdCathodeOp:= E_GaugeCompOp.IGNORE);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[SUPER^();

CASE nStep OF
E_OpStep.START_STEP: // System Status Check
	M_RunTimeoutTimer(STATUS_CHECK_TIMEOUT);
	IF F_VerifySBPumpStatuses(stExpStatus := stExpPumpStatus, bEnforce := TRUE)
		AND F_VerifySBValveStatuses(stExpStatus := stExpValveStatus, bEnforce := TRUE)
		AND F_VerifySBGaugeReadings(stExpReadings := stExpGaugeReadings, stReadingsOp := stGaugeReadingsOp)
		AND F_VerifyTransportTubeStatuses(stExpStatus := stExpBO4Status, 
			stStatusOp := stBO4Op, 
			eTransportTube := E_TransportTube.BO4, 
			bEnforce := TRUE)
		AND F_VerifyTransportTubeStatuses(stExpStatus := stExpBI1Status, 
			stStatusOp := stBI1Op, 
			eTransportTube := E_TransportTube.BI1, 
			bEnforce := TRUE)
	THEN // System status check passed
		M_ResetTimeoutTimer();
		//nStep := E_OpStep.PSB_INIT_ROUGHING;
	ELSIF M_TimeoutExpired() THEN // Timeout reached
		M_FatalError();
	END_IF
	
E_OpStep.VPS_START_VENT: // Vent pump station to atmospheric pressure
	// Redundant check that PP_VGC is closed before proceeding
	IF GVL_BTS_VAC.fb_PP_VGC.M_IsClosed() THEN
		// Disable pumps
		GVL_BTS_VAC.fb_PP_PTM.M_Run(FALSE);
		GVL_BTS_VAC.fb_PP_PMF.M_Run(FALSE);
		
		// Open pump station vent
		GVL_BTS_VAC.fb_PP_VVC.M_Open(TRUE);
		
		nStep := E_OpStep.VPS_VENTING;
	ELSE // Attempt to close PP_VGC
		M_FatalError();
	END_IF
	
E_OpStep.VPS_VENTING:
	

	// Vent until atmoshperic pressure reached
	IF ABS(GVL_BTS_VAC.fb_PP_GPI_1.PG.rPRESS - ATM_PRESS) < ATM_PRESS_ERR_RNG THEN
		// Atmospheric pressure reached in pumping station. Close vent
		GVL_BTS_VAC.fb_PP_VVC.M_Open(FALSE);
		nStep := 3;
	END_IF
	
3: // System status check
	M_Finish();	
END_CASE
]]></ST>
    </Implementation>
    <LineIds Name="FB_VentPumpStation">
      <LineId Id="55" Count="0" />
      <LineId Id="91" Count="0" />
      <LineId Id="89" Count="0" />
      <LineId Id="183" Count="17" />
      <LineId Id="94" Count="0" />
      <LineId Id="112" Count="1" />
      <LineId Id="115" Count="1" />
      <LineId Id="201" Count="0" />
      <LineId Id="120" Count="0" />
      <LineId Id="122" Count="1" />
      <LineId Id="202" Count="0" />
      <LineId Id="124" Count="0" />
      <LineId Id="213" Count="1" />
      <LineId Id="118" Count="1" />
      <LineId Id="114" Count="0" />
      <LineId Id="203" Count="1" />
      <LineId Id="212" Count="0" />
      <LineId Id="211" Count="0" />
      <LineId Id="210" Count="0" />
      <LineId Id="206" Count="3" />
      <LineId Id="205" Count="0" />
      <LineId Id="126" Count="2" />
      <LineId Id="93" Count="0" />
      <LineId Id="11" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>