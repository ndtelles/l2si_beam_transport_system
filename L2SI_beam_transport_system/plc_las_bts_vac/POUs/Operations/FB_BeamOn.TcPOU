<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4022.17">
  <POU Name="FB_BeamOn" Id="{5437e5d8-4745-4193-bf7f-65f6c9441049}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_BeamOn EXTENDS FB_Operation
VAR_INPUT
	i_eTransportTube : E_TransportTube;
END_VAR
VAR_OUTPUT
END_VAR
VAR
	eTransportTube : E_TransportTube; // Ensure transport tube doesn't get changed during operation by making a copy
	stTTDevices : ST_TransportTubeDevices;
END_VAR
VAR CONSTANT
	(* Expected system states before operation starts*)		
	stExpPumpStatus : ST_SBPumpStatuses := (
		bRoughingPumpOn:= TRUE, 
		bTurboPumpOn:= TRUE, 
		bIonPumpOn:= TRUE);
	
	stExpValveStatus : ST_SBValveStatuses := (
		bGateValveOpen:= TRUE, 
		bVentValveOpen:= FALSE, 
		bORingPumpValveOpen:= TRUE, 
		bForelineValveOpen:= TRUE, 
		bSlowPumpValveOpen:= FALSE,
		bSBVentOpen:= FALSE,  
		bSBSlowVentOpen:= FALSE);
	
	stExpGaugeReadings : ST_SBGaugeReadings := (
		eDPColdCathodeState:= E_PressureState.off,
		ePumpStationColdCathodeState:= E_PressureState.off
	);
	stGaugeReadingsOp : ST_SBGaugeReadingsOp := (
		eDPPiraniOp:= E_GaugeCompOp.ATM, 
		eDPColdCathodeOp:= E_GaugeCompOp.STATE, 
		ePumpStationPirani1Op:= E_GaugeCompOp.ATM, 
		ePumpStationPirani2Op:= E_GaugeCompOp.ATM, 
		ePumpStationColdCathodeOp:= E_GaugeCompOp.STATE);
		
	stExpTTStatus : ST_TransportTubeStatuses := (
		bIonPumpOn:= FALSE,
		bGateValveOpen:= FALSE,
		eColdCathodeState:= E_PressureState.Off);
	stTTOp : ST_TransportTubeOps := (
		ePiraniOp := E_GaugeCompOp.ATM,
		eColdCathodeOp := E_GaugeCompOp.STATE
	);
END_VAR

]]></Declaration>
    <Implementation>
      <ST><![CDATA[SUPER^();

CASE eStep OF
E_OpStep.START: // Verify system status
	M_RunTimeoutTimer(STATUS_CHECK_TIMEOUT);
	
	eTransportTube := i_eTransportTube;
	stTTDevices := F_GetTransportTubeDevices(i_eTransportTube);
	
	IF F_VerifyTransportTubeStatuses(stExpStatus := stExpTTStatus,
		eTransportTube := eTransportTube,
		stStatusOp := stTTOp, 
		bEnforce := FALSE)
	THEN // System status check 
		M_ResetTimeoutTimer();
	END_IF
END_CASE]]></ST>
    </Implementation>
    <LineIds Name="FB_BeamOn">
      <LineId Id="315" Count="15" />
      <LineId Id="20" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>