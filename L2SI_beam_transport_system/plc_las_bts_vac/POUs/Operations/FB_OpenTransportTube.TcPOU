<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4022.17">
  <POU Name="FB_OpenTransportTube" Id="{9853b0f7-0da2-457b-8c34-deca199bc8ef}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_OpenTransportTube EXTENDS FB_Operation
VAR_INPUT
	i_eTransportTube : E_TransportTube;
END_VAR
VAR_OUTPUT
END_VAR
VAR
	eTransportTube : E_TransportTube; // Ensure transport tube doesn't get changed during operation by making a copy
	stTTDevices : ST_TransportTubeDevices;
END_VAR
VAR CONSTANT
END_VAR

]]></Declaration>
    <Implementation>
      <ST><![CDATA[SUPER^();

CASE eStep OF
E_OpStep.START: // Verify system status	
	M_SetMessage('Verifying System Status');
	eTransportTube := i_eTransportTube;
	stTTDevices := F_GetTransportTubeDevices(eTransportTube);
	
	IF GVL_BTS_VAC.fb_DP_GCC.IG.rPRESS <= 1E-5 AND stTTDevices.refColdCathode.IG.rPRESS <= 1E-5 THEN 
		// System status check passed
		M_SetMessage('Opening gate valve');
		eStep := E_OpStep.OTT_OPEN_VALVE;
	// If either the switchbox or transport tube are not at base pressure, pump down the higher one
	ELSIF GVL_BTS_VAC.fb_DP_GCC.IG.rPRESS > stTTDevices.refColdCathode.IG.rPRESS THEN
		// Pump down switchbox
		q_eCallOp := E_Op.PSB;
		M_Finish();
	ELSE // Pump down transport tube
		q_eCallOp := E_Op.PTT;
		M_Finish();
	END_IF
	
E_OpStep.OTT_OPEN_VALVE:
	M_RunTimeoutTimer(VALVE_TIMEOUT);
	
	// Open the gate valve
	stTTDevices.refGateValve.M_Set_OPN_SW(TRUE);
	
	// Once the gate valve is open, finish the operation
	IF stTTDevices.refGateValve.M_IsOpen() THEN
		M_ResetTimeoutTimer();
		M_Finish();
	END_IF
	
ELSE
	M_FatalError('Operation is in invalid state');
END_CASE]]></ST>
    </Implementation>
    <LineIds Name="FB_OpenTransportTube">
      <LineId Id="505" Count="9" />
      <LineId Id="552" Count="0" />
      <LineId Id="515" Count="21" />
      <LineId Id="566" Count="0" />
      <LineId Id="568" Count="0" />
      <LineId Id="567" Count="0" />
      <LineId Id="20" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>